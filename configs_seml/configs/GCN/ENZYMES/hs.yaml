seml:
  executable: main.py
  output_dir: configs_seml/logs
  project_root_dir: ../../../..
  conda_environment: gtr

slurm:
  experiments_per_job: 10
  sbatch_options:
    partition: <slurm-gpu-partition>
    gres: gpu:1
    mem: 32G
    cpus-per-task: 1
    time: 1-00:00
    

# experiment random configs
  
random:
  samples: 100
  seed: 31453

  graphgym.seed:
    seed: 14255
    type: randint
    min: 0
    max: 10000

  graphgym.optim.base_lr:
    seed: 264
    type: loguniform
    min: 1e-4
    max: 5e-2

  graphgym.optim.weight_decay:
    seed: 809
    type: loguniform
    min: 5e-7
    max: 1e-1

  graphgym.gnn.dim_inner:
    seed: 422
    type: randint
    min: 200
    max: 550

  graphgym.gnn.layers_mp:
    seed: 389
    type: choice
    options:
      - 3
      - 4
      - 5
  
  graphgym.gnn.layers_post_mp:
    seed: 966
    type: choice
    options:
      - 1
      - 3

# experiment fixed configs 

fixed:

  graphgym:

    accelerator: cuda
    out_dir: configs_seml/results
    metric_best: accuracy
    metric_agg: argmax
    tensorboard_each_run: false

    dataset:
      format: PyG-TUDataset
      name: ENZYMES
      task: graph
      task_type: classification
      transductive: false
      split_mode: cv-stratifiedkfold-10
      split_index: 0
      node_encoder: true
      node_encoder_name: LinearNode
      node_encoder_bn: false
      edge_encoder: false

    train:
      mode: custom
      batch_size: 32
      eval_period: 1

    model:
      type: gnn
      loss_fun: cross_entropy

    gnn:
      layer_type: gcnconvweighted
      head: weighted_add_pool_graph
      layers_pre_mp: 0
      batchnorm: true
      act: relu
      dropout: 0.01
      stage_type: stack

    optim:
      optimizer: adamW
      max_epoch: 500
      scheduler: reduce_on_plateau
      reduce_factor: 0.5
      schedule_patience: 10
      min_lr: 1.0e-5
      early_stopping: true
      early_stopping_patience: 50
      early_stopping_delta_e: 0.02
      early_stopping_warmup: 50
      clip_grad_norm: false
      
    attack:
      enable: false
