seml:
  executable: main.py
  output_dir: configs_seml/logs
  project_root_dir: ../../../..
  conda_environment: gtr

slurm:
  experiments_per_job: 6
  sbatch_options:
    partition: <slurm-gpu-partition>
    gres: gpu:1
    mem: 32G
    cpus-per-task: 1
    time: 1-00:00

random:
  samples: 3
  seed: 6264

  graphgym.seed:
    seed: 7386
    type: randint
    min: 0
    max: 10000

grid:

  graphgym.train.adv.num_replays: 
    type: choice
    options:
      - 2
      - 4
      - 5
      - 6
    zip_id: epochs-replay

  graphgym.optim.max_epoch:
    type: choice
    options:
      - 150
      - 75
      - 60
      - 50
    zip_id: epochs-replay

  graphgym.optim.num_warmup_epochs:
    type: choice
    options:
      - 5
      - 4
      - 3
      - 2
    zip_id: epochs-replay

  graphgym.optim.early_stopping_warmup:
    type: choice
    options:
      - 15
      - 8
      - 7
      - 6
    zip_id: epochs-replay

  graphgym.optim.early_stopping_patience:
    type: choice
    options:
      - 20
      - 15
      - 10
      - 8
    zip_id: epochs-replay

  graphgym.train.adv.e_budget:
    type: choice
    options:
      - 0.05
      - 0.1
      - 0.15

fixed:

  graphgym:
    accelerator: auto

    attack:
      enable: false
      e_budget: 0.15
      num_attacked_graphs: 30
      skip_incorrect_graph_classification: true
      log_progress: false
      load_best_model: true
      split: test
      prediction_level: graph
      remove_isolated_components: true
      run_random_baseline: true
      block_size: 1_000
      epochs: 125
      epochs_resampling: 100
      resample_period: 1
      max_final_samples: 20
      eps: 1.0e-07
      eps_init_noised: false
      is_undirected: true
      loss: raw_prediction
      metric: null
      lr: 4000
      max_edge_weight_update: 0.0
      max_trials_sampling: 20
      minimum_budget: 1
      node_prob_enable: true
      node_prob_iterations: 3
      node_prob_log: true
      root_node_idx: 0
      with_early_stopping: true
      node_injection:
        enable: true
        from_train: true
        from_val: true
        from_test: true
        allow_existing_graph_pert: false
        sample_only_connected: true
        include_root_nodes: false
        sample_only_trees: true

    train:
      mode: adversarial
      eval_period: 1
      batch_size: 16
      adv:
        batched_train: False
        block_size: 500
        lr: 5000
        # for val
        block_size_val: 1000
        epochs_val: 10
        epochs_resampling_val: 7
        lr_val: 4000
        max_final_samples: 4
        max_num_graphs_val: 100
        early_stopping_adv: true
        nia_include_train_in_val: true

    optim:
      base_lr: 0.0005613502210584832
      batch_accumulation: 1
      clip_grad_norm: true
      clip_grad_norm_value: 5.0
      early_stopping: true
      early_stopping_delta_e: 0.05
      lr_decay: 0.1
      min_lr: 0.0
      momentum: 0.9
      optimizer: adamW
      reduce_factor: 0.1
      schedule_patience: 10
      scheduler: cosine_with_warmup
      steps:
      - 30
      - 60
      - 90
      weight_decay: 0.029739191336970547

    benchmark: false
    best_by_loss: false
    dataset:
      dir: ./datasets
      format: PyG-UPFD
      name: politifact-bert
      node_encoder: true
      node_encoder_bn: false
      node_encoder_name: LinearNode+WeightedRRWPLinear
      split_mode: standard
      task: graph
      task_type: classification_binary
      transductive: false
    gnn:
      dim_inner: 9
      layers_post_mp: 2
      layers_pre_mp: 0
      head: weighted_mean_pool_graph
    gt:
      attn:
        O_e: true
        act: relu
        clamp: 5.0
        deg_scaler: true
        edge_enhance: true
        full_attn: true
        norm_e: true
        use_bias: false
      attn_dropout: 0.49043390029112205
      batch_norm: true
      bn_momentum: 0.1
      bn_no_runner: false
      dim_hidden: 9
      dropout: 0.0
      full_graph: true
      layer_norm: false
      layers: 2
      n_heads: 3
      residual: true
      update_e: true
    metric_agg: argmax
    metric_best: accuracy
    model:
      loss_fun: cross_entropy
      type: GritTransformer
    posenc_RRWP:
      enable: true
      ksteps: 9
      w_add_dummy_edge: true
