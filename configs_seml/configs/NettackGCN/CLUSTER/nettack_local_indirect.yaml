seml:
  executable: main.py
  output_dir: configs_seml/logs
  project_root_dir: ../../../..
  conda_environment: gtr

slurm:
  experiments_per_job: 6
  sbatch_options:
    partition: <slurm-gpu-partition>
    gres: gpu:1
    mem: 32G
    cpus-per-task: 2
    time: 1-00:00
    

grid:

  graphgym.seed:
    type: choice
    options:
      - 42
      - 670
      - 7813
      - 9537

  graphgym.attack.e_budget:
    type: choice
    options:
      - 0.002
      - 0.005
      - 0.009
      - 0.014
      - 0.02

# experiment fixed configs - from benchmarking paper

fixed:

  graphgym:

    accelerator: auto
    out_dir: configs_seml/results
    metric_best: accuracy-SBM
    metric_agg: argmax
    tensorboard_each_run: false

    pretrained:
      dir: '/<your-saved-path>/models/NettackGCN/CLUSTER/0'
      finetune: false

    attack:
      local:
        enable: true
        num_victim_nodes: 3
        sampling_direct_edge_weight: 0
        nettack: true
      cluster_sampling: false
      enable: true
      num_attacked_graphs: 30
      skip_incorrect_graph_classification: false
      log_progress: false
      load_best_model: false
      split: test
      prediction_level: node
      remove_isolated_components: false
      run_random_baseline: false
      block_size: 3000
      epochs: 125
      epochs_resampling: 100
      resample_period: 1
      max_final_samples: 20
      eps: 1.0e-07
      eps_init_noised: false
      is_undirected: true
      loss: tanh_margin
      metric: neg_accuracy
      lr: 4000
      max_edge_weight_update: 0.0
      max_trials_sampling: 20
      minimum_budget: 1
      node_prob_enable: false
      root_node_idx: null
      with_early_stopping: true
      node_injection:
        enable: false

    dataset:
      format: PyG-GNNBenchmarkDataset
      name: CLUSTER
      task: graph
      task_type: classification
      transductive: false
      split_mode: standard
      node_encoder: true
      node_encoder_name: LinearNode
      node_encoder_bn: false
      edge_encoder: false

    model:
      type: NettackGCN
      loss_fun: weighted_cross_entropy

    gnn:
      layer_type: gcnconvweighted
      head: inductive_node
      act: identity
      dim_inner: 145
      layers_pre_mp: 0
      layers_mp: 2
      layers_post_mp: 0
      batchnorm: false

    optim:
      optimizer: adamW
      max_epoch: 150
      scheduler: reduce_on_plateau
      reduce_factor: 0.5
      schedule_patience: 5
      min_lr: 1.0e-5
      clip_grad_norm: false
      early_stopping: true
      early_stopping_patience: 25
      early_stopping_delta_e: 0.01
      early_stopping_warmup: 25
